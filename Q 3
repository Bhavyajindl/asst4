// studentn id - 1024030295
#include <iostream>
#include <queue>
using namespace std;

void interleaveQueue(queue<int> &q) {
    int n = q.size();

    // Only works if queue has even number of elements
    if (n % 2 != 0) {
        cout << "Queue does not have even number of elements!\n";
        return;
    }

    int half = n / 2;
    queue<int> firstHalf;

    // Push first half into another queue
    for (int i = 0; i < half; i++) {
        firstHalf.push(q.front());
        q.pop();
    }

    // Interleave both halves
    while (!firstHalf.empty()) {
        q.push(firstHalf.front()); // take from first half
        firstHalf.pop();

        q.push(q.front()); // take from second half
        q.pop();
    }
}

int main() {
    queue<int> q;
    int n, val;

    cout << "Enter number of elements (even): ";
    cin >> n;

    cout << "Enter elements:\n";
    for (int i = 0; i < n; i++) {
        cin >> val;
        q.push(val);
    }

    cout << "Original Queue: ";
    {
        queue<int> temp = q;
        while (!temp.empty()) {
            cout << temp.front() << " ";
            temp.pop();
        }
        cout << endl;
    }

    interleaveQueue(q);

    cout << "Interleaved Queue: ";
    while (!q.empty()) {
        cout << q.front() << " ";
        q.pop();
    }
    cout << endl;

    return 0;
}
